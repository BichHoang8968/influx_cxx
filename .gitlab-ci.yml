stages:
  - build
  - publish

default:
  tags:
    - benzaiten-autoscale

# Global variable (can configure outside in gitlab web)
variables:
  PROXY: "http://proxy.toshiba.co.jp:8080"
  NO_PROXY: "127.0.0.1,tccloud2.toshiba.co.jp,localhost"
  ACCESS_TOKEN: "J-CyStgYPMWeTFSY_Ubs"
  URI_HOST: "tccloud2.toshiba.co.jp/swc"
  INFLUXDB_CXX_PROJECT_ID: "728"
  RPM_DIR: "cxx_rpm"
  DIST: "rhel8"
  INFLUXDB_CXX_PACKAGE: "rpm_RL8"
  INFLUXDB_CXX_PACKAGE_VERSION: "0.0.1"
  INFLUXDB_CXX_RELEASE_VERSION: "0.0.1"

project_build:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    IMAGE_TAG: "cxx_build"
    DOCKERFILE: "Dockerfile_rpm"
  before_script:
    - export http_proxy=http://proxy.toshiba.co.jp:8080 && export https_proxy=http://proxy.toshiba.co.jp:8080
    - export no_proxy=127.0.0.1,localhost,docker
    # handle if the previous pipeline error
    - docker rm $(docker stop test) || true
    - docker rmi $IMAGE_TAG || true
    - echo "y" | docker system prune
  script:
    - echo "Building RPM ....."
    - docker build -t $IMAGE_TAG
                   --build-arg proxy=$PROXY
                   --build-arg no_proxy=$NO_PROXY
                   --build-arg ACCESS_TOKEN=$ACCESS_TOKEN
                   --build-arg DIST=${DIST}
                   --build-arg RELEASE_VERSION=$INFLUXDB_CXX_RELEASE_VERSION
                   -f $DOCKERFILE .
    # get rpm file from docker image
    - mkdir -p $RPM_DIR
    - docker run -d --name test $IMAGE_TAG /usr/sbin/init
    - docker cp test:/home/user1/rpmbuild/RPMS/x86_64 $RPM_DIR
    # clean-up: delete docker image
    - docker rm $(docker stop test)
    - docker rmi $IMAGE_TAG
    - cp $RPM_DIR/x86_64/* $RPM_DIR
    - rm -rf $RPM_DIR/x86_64/
  artifacts:
    paths:
      - $RPM_DIR
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'

# Push RPM to Registry job
project_publish:
  stage: publish
  before_script:
    - export http_proxy=http://proxy.toshiba.co.jp:8080 && export https_proxy=http://proxy.toshiba.co.jp:8080
    - export no_proxy=127.0.0.1,localhost,docker
    - apt-get update -qq && apt-get install -y -qq curl
  variables:
    curl_command: "curl --header \"PRIVATE-TOKEN: $ACCESS_TOKEN\" --insecure --upload-file"
    package_uri: "https://$URI_HOST/gitlab/api/v4/projects/$INFLUXDB_CXX_PROJECT_ID/packages/generic/$INFLUXDB_CXX_PACKAGE/$INFLUXDB_CXX_PACKAGE_VERSION"
  script:
    - echo "Publishing ....."
    # sqlite_fdw
    - eval "$curl_command $RPM_DIR/influxdb-cxx-$INFLUXDB_CXX_RELEASE_VERSION-$DIST.x86_64.rpm
                          $package_uri/influxdb-cxx-$INFLUXDB_CXX_RELEASE_VERSION-$DIST.x86_64.rpm
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
